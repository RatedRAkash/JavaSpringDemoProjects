spring:
  cloud:
    stream:
      binders:
        local_rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
#                host: 10.10.15.107
                host: 192.168.0.172
#                host: localhost
                port: 5672
                username: guest
                password: guest
                virtual-host: /
#              listener:
#                direct:
#                  acknowledge-mode: MANUAL
#                simple:
#                  retry:
#                    enabled: true
#              template:
#                retry:
#                  enabled: true
#                receive-timeout: 5000
      bindings:
#   -----------TXN TOPIC-----------
        TXN_TOPIC_INPUT1:
          destination: tp_txn_topic_exchange
          group: tp_txn_topic1
#          consumer:
#            concurrency: 4 # Concurrency works During CREATION Of Exchange, So if Exchange with SAME name already Exists Delete it
#            auto-bind-dlq: true
#            republishToDlq: true
#            maxAttempts: 5
          binder: local_rabbit

        TXN_TOPIC_INPUT2:
          destination: tp_txn_topic_exchange
          group: tp_txn_topic2
          binder: local_rabbit

        TXN_TOPIC_INPUT3:
          destination: tp_txn_topic_exchange
          group: tp_txn_topic3
          binder: local_rabbit

        TXN_TOPIC_INPUT4:
          destination: tp_txn_topic_exchange
          group: tp_txn_topic4
          binder: local_rabbit

        # ...OUTPUT...
        TXN_TOPIC_OUTPUT:
          destination: tp_txn_topic_exchange
          binder: local_rabbit


#   -----------NOTIFICATION TOPIC-----------
        NOTIFICATION_TOPIC_INPUT1:
          destination: tp_notification_topic_exchange
          group: tp_notification_topic1
#          consumer:
#            concurrency: 2 # Concurrency works During CREATION Of Exchange, So if Exchange with SAME name already Exists Delete it
          binder: local_rabbit

        NOTIFICATION_TOPIC_INPUT2:
          destination: tp_notification_topic_exchange
          group: tp_notification_topic2
          binder: local_rabbit

        # ...OUTPUT...
        NOTIFICATION_TOPIC_OUTPUT:
          destination: tp_notification_topic_exchange
          binder: local_rabbit

#   -----------SMS-REQUEST QUEUE-----------
        SMS_REQUEST_QUEUE_INPUT:
          destination: tp_sms_request_queue_exchange
          group: tp_sms_request_queue
          binder: local_rabbit

        SMS_REQUEST_QUEUE_OUTPUT:
          destination: tp_sms_request_queue_exchange
          binder: local_rabbit


#      rabbit:
#        bindings:
#          TXN_TOPIC_OUTPUT:
#            producer:
#              exchange-type: topic
#        default:
#          consumer:
#            bindingRoutingKey: default-queue
#          producer:
#            exchangeType: direct
